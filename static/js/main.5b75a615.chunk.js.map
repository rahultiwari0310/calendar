{"version":3,"sources":["Components/Sections/Navigation.jsx","constants.js","helpers.js","Components/Day/EventTooltip.jsx","Components/Day/EventItem.jsx","Components/Day/DraggableEvent.jsx","Components/Day/DroppableSlot.jsx","Components/Day/DayHead.jsx","Components/Day/Day.jsx","firebase.js","Components/Sections/Week.jsx","Components/Sections/WeeksAndNav.jsx","Components/Sections/CreateEvent.jsx","Components/Sections/AppHead.jsx","Components/EventForm/Label.jsx","Components/EventForm/EventDateTime.jsx","Components/EventForm/InputText.jsx","Components/EventForm/Form.jsx","Components/EventForm/Modal.jsx","Components/EventForm/ModalWithForm.jsx","Components/Calendar.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavOption","onClick","icon","type","className","dateFormat","timeFormat","dateTimeFormat","dateRangeOverlaps","date1","date2","Math","max","min","endDate","startDate","getStyles","event","conflicts","postion","date","startOfDay","startOf","$d","getTime","endOfDay","endOf","eventStartDate","height","top","left","length","width","getWeekdays","week","startOfWeek","dayjs","add","Array","fill","map","day","idx","EventTooltip","eventId","title","owner","theme","id","effect","clickable","offset","format","EventItem","DraggableEvent","addOrEditEvent","checkForExistingMeetings","positionForCurrentEvent","sort","a","b","localeCompare","indexOf","style","e","data","DroppableSlot","props","slot","isFirstDay","handleDrop","types","onDrop","DayHead","Day","eventsInDay","it","connection","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","ref","createUpdateEvent","window","alert","child","set","logAndAlert","push","err","console","log","toString","Week","selectedWeek","allEvents","events","Object","keys","filter","key","updateEventAsPerDrop","WeeksAndNav","changeWeek","CreateEvent","now","get","AppHead","Label","label","labelFor","labelfor","EventDate","onChange","pickerClassName","InputText","placeholder","value","name","required","currentTarget","Form","closeModal","useState","Date","formValues","setFormValues","updateFormValues","payload","close","confirm","remove","removeEvent","onSubmit","preventDefault","start","end","updatedEvent","EventModal","children","modalIsOpen","isOpen","onRequestClose","contentLabel","content","modalStyles","transform","ModalWithForm","modalPayload","modalFormProps","Calendar","setModalState","setEvents","useEffect","callback","on","snapshot","val","hideAlert","_id","existingEvent","checkConflicts","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b75a615.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function NavOption({ onClick, icon }) {\n  return (\n    <button\n      onClick={onClick}\n      type=\"button\"\n      className=\"calendar-nav-button btn btn-primary \"\n    >\n      <i className={`fas fa-angle-${icon}`}></i>\n    </button>\n  );\n}\n\nNavOption.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n","export const dateFormat = \"DD MMM YYYY\";\nexport const timeFormat = \"hh:mm A\";\nexport const dateTimeFormat = `${dateFormat} ${timeFormat}`;\n","import dayjs from \"dayjs\";\nimport { dateTimeFormat } from \"./constants\";\n\n//Checks for a given event duration if another existing event overlaps\nexport const checkConflicts = (event, allEvents, _id, hideAlert) => {\n  //check against all events whether time overlaps\n  const conflicts = Object.keys(allEvents).filter((eventId) => {\n    const existingEvent = allEvents[eventId];\n    return dateRangeOverlaps(event, existingEvent) && eventId !== _id;\n  });\n\n  //if overlaps show alert\n  if (conflicts.length) {\n    const existingEvent = allEvents[conflicts[0]];\n    !hideAlert &&\n      window.alert(\n        `There is already a meeting \"${\n          existingEvent.title\n        }\" starting at ${dayjs(existingEvent.startDate).format(dateTimeFormat)}`\n      );\n  }\n  return conflicts;\n};\n\n//Returns true if two date ranges overlap\nexport const dateRangeOverlaps = (date1, date2) => {\n  return (\n    Math.max(\n      Math.min(date1.endDate, date2.endDate) -\n        Math.max(date1.startDate, date2.startDate),\n      0\n    ) > 0\n  );\n};\n\n//Returns styles for events to be placed on a given date\nexport const getStyles = (event, conflicts, postion, date) => {\n  const startOfDay = date.startOf(\"day\").$d.getTime();\n  const endOfDay = date.endOf(\"day\").$d.getTime();\n\n  //Event start on event time or day start -- Required if event exists in two days\n  const eventStartDate = Math.max(event.startDate, startOfDay);\n\n  //Event ends of eventend time or day end -- Required if event exists in two days\n  const eventEndDate = Math.min(event.endDate, endOfDay);\n\n  //Height for every half hour depicted in 20px\n  const height =\n    ((eventEndDate - eventStartDate) / (1000 * 60 * 30)) * 20 + \"px\";\n\n  //Position for every half hour depicted in 20px\n  const top =\n    ((eventStartDate - date.startOf(\"day\").$d.getTime()) / (1000 * 60 * 30)) *\n      20 +\n    \"px\";\n\n  //Adjust left position as per no. of conflicting meetings within a slot\n  const left = (100 / (conflicts.length + 1)) * postion + \"%\";\n\n  //Adjust width as per no. of conflicting meetings within a slot\n  const width = 100 / (conflicts.length + 1) + \"%\";\n\n  return {\n    width,\n    top,\n    height,\n    left,\n  };\n};\n\n//Returns event overlapping within a day range\nexport const getEventsInDay = (day, events) => {\n  return Object.keys(events)\n    .filter((key) =>\n      dateRangeOverlaps(events[key], {\n        startDate: day.$d.getTime(),\n        endDate: day.endOf(\"day\").$d.getTime(),\n      })\n    )\n    .map((key) => {\n      return { ...events[key], eventId: key };\n    });\n};\n\n//Returns array of 7 days in a selected week\nexport const getWeekdays = (week) => {\n  const startOfWeek = dayjs().add(week, \"week\").startOf(\"week\");\n\n  return new Array(7).fill(startOfWeek).map((day, idx) => day.add(idx, \"day\"));\n};\n","import React from \"react\";\nimport dayjs from \"dayjs\";\nimport ReactTooltip from \"react-tooltip\";\nimport { dateTimeFormat } from \"../../constants\";\n\nimport PropTypes from \"prop-types\";\n\nexport default function EventTooltip({\n  eventId,\n  title,\n  owner,\n  startDate,\n  endDate,\n  theme,\n}) {\n  return (\n    <ReactTooltip\n      id={eventId}\n      effect=\"solid\"\n      clickable\n      offset={{ top: 0, left: 0 }}\n    >\n      <p>Title: {title}</p>\n      <p>Owner: {owner}</p>\n      <p>\n        Time: {dayjs(startDate).format(dateTimeFormat)} -{\" \"}\n        {dayjs(endDate).format(dateTimeFormat)}\n      </p>\n      {theme ? <p>Theme: {theme}</p> : null}\n    </ReactTooltip>\n  );\n}\n\nEventTooltip.propTypes = {\n  eventId: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  owner: PropTypes.string.isRequired,\n  startDate: PropTypes.number.isRequired,\n  endDate: PropTypes.number.isRequired,\n  theme: PropTypes.string,\n};\n","import dayjs from \"dayjs\";\nimport React from \"react\";\nimport { timeFormat } from \"../../constants\";\n\nimport PropTypes from \"prop-types\";\n\nexport default function EventItem({ event }) {\n  return (\n    <div className=\"event-content\">\n      <div className=\"event-title\">{event.title}</div>\n      <div className=\"event-time\">\n        {dayjs(event.startDate).format(\"hh:mm\")} -{\" \"}\n        {dayjs(event.endDate).format(timeFormat)}\n      </div>\n    </div>\n  );\n}\n\nEventItem.propTypes = {\n  event: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport { Draggable } from \"react-drag-and-drop\";\nimport { getStyles } from \"../../helpers\";\nimport EventTooltip from \"./EventTooltip\";\nimport EventItem from \"./EventItem\";\n\nimport PropTypes from \"prop-types\";\n\nexport default function DraggableEvent({\n  date,\n  addOrEditEvent,\n  event,\n  checkForExistingMeetings,\n}) {\n  const conflicts = checkForExistingMeetings(event, event.eventId, true);\n  const sortedEventKeys = [...conflicts, event.eventId].sort((a, b) =>\n    a.localeCompare(b)\n  );\n  const positionForCurrentEvent = sortedEventKeys.indexOf(event.eventId);\n  return (\n    <div\n      className=\"event-in-day\"\n      style={getStyles(event, conflicts, positionForCurrentEvent, date)}\n      data-for={event.eventId}\n      data-tip\n      onClick={(e) => addOrEditEvent({ ...event })}\n    >\n      <Draggable type=\"event\" data={event.eventId}>\n        <EventItem event={event} />\n      </Draggable>\n      <EventTooltip {...event} />\n    </div>\n  );\n}\n\nDraggableEvent.propTypes = {\n  date: PropTypes.object.isRequired,\n  event: PropTypes.object.isRequired,\n  checkForExistingMeetings: PropTypes.func.isRequired,\n  addOrEditEvent: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { Droppable } from \"react-drag-and-drop\";\nimport { timeFormat } from \"../../constants\";\nimport PropTypes from \"prop-types\";\n\nexport default function DroppableSlot(props) {\n  const { slot, isFirstDay, addOrEditEvent, handleDrop, idx } = props;\n\n  return (\n    <Droppable\n      types={[\"event\"]}\n      onDrop={(e) => {\n        handleDrop(slot, e.event);\n      }}\n    >\n      <div\n        className={`half-hour half-hour-${idx % 2}`}\n        onClick={(e) => addOrEditEvent({ slot })}\n      >\n        {isFirstDay && !(idx % 2) ? (\n          <span className=\"half-hour-time\">{slot.format(timeFormat)}</span>\n        ) : null}\n      </div>\n    </Droppable>\n  );\n}\n\nDroppableSlot.propTypes = {\n  slot: PropTypes.object.isRequired,\n  isFirstDay: PropTypes.bool,\n  addOrEditEvent: PropTypes.func.isRequired,\n  handleDrop: PropTypes.func.isRequired,\n  idx: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport { dateFormat } from \"../../constants\";\nimport PropTypes from \"prop-types\";\n\nexport default function DayHead(props) {\n  const { date } = props;\n\n  return (\n    <>\n      <div className=\"day-heading\">{date.format(dateFormat)}</div>\n      <div className=\"day-heading\">{date.format(\"dddd\")}</div>\n    </>\n  );\n}\n\nDayHead.propTypes = {\n  date: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport DraggableEvent from \"./DraggableEvent\";\nimport DroppableSlot from \"./DroppableSlot\";\nimport DayHead from \"./DayHead\";\nimport PropTypes from \"prop-types\";\n\nexport default function Day(props) {\n  const {\n    date,\n    isFirstDay,\n    addOrEditEvent,\n    eventsInDay,\n    handleDrop,\n    checkForExistingMeetings,\n  } = props;\n\n  return (\n    <div className=\"col border\">\n      <DayHead date={date} />\n      <div className=\"half-hours\">\n        {new Array(48).fill(1).map((it, idx) => {\n          const slot = date.startOf(\"day\").add(idx * 30, \"minutes\");\n          return (\n            <DroppableSlot\n              slot={slot}\n              idx={idx}\n              isFirstDay={isFirstDay}\n              handleDrop={handleDrop}\n              addOrEditEvent={addOrEditEvent}\n              key={slot.$d.getTime()}\n            />\n          );\n        })}\n        {eventsInDay.map((it) => (\n          <DraggableEvent\n            event={it}\n            date={date}\n            checkForExistingMeetings={checkForExistingMeetings}\n            addOrEditEvent={addOrEditEvent}\n            key={it.eventId}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nDay.propTypes = {\n  date: PropTypes.object.isRequired,\n  isFirstDay: PropTypes.bool,\n  addOrEditEvent: PropTypes.func.isRequired,\n  eventsInDay: PropTypes.array.isRequired,\n  handleDrop: PropTypes.func.isRequired,\n  checkForExistingMeetings: PropTypes.func.isRequired,\n};\n","import firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDE8yPkLomMyYrLnu3f_t37CFd_eptOCo8\",\n  authDomain: \"calendar-firebase-e3f9f.firebaseapp.com\",\n  databaseURL: \"https://calendar-firebase-e3f9f-default-rtdb.firebaseio.com\",\n  projectId: \"calendar-firebase-e3f9f\",\n  storageBucket: \"calendar-firebase-e3f9f.appspot.com\",\n  messagingSenderId: \"534820117922\",\n  appId: \"1:534820117922:web:00d0ec4ef1d0eb7b0ae6fb\",\n  measurementId: \"G-9P678RTSDQ\",\n};\n// Initialize Firebase\nconst firebaseDB = firebase.initializeApp(firebaseConfig);\nconst connection = firebaseDB.database().ref();\n\n//Firebase helpers\n\n//Create or update event in firebase\nexport const createUpdateEvent = (event, eventId) => {\n  if (event.startDate >= event.endDate) {\n    window.alert(\"Event start date cannot be after or same as event end date.\");\n    return;\n  }\n  if (eventId) {\n    connection.child(`events/${eventId}`).set(event, logAndAlert);\n  } else {\n    connection.child(\"events\").push(event, logAndAlert);\n  }\n};\n\n//Delete event from DB\nexport const removeEvent = (eventId, close) => {\n  if (window.confirm(\"Are you sure you want to delete this event ?\")) {\n    connection.child(`events/${eventId}`).remove(logAndAlert);\n    close && close();\n  }\n};\n\n//Subscribe to events data\nexport const subscribeToEvents = (callback) => {\n  connection.child(\"events\").on(\"value\", (snapshot) => {\n    const value = snapshot.val();\n    if (value) {\n      callback({ ...value });\n    }\n  });\n};\n\nexport const logAndAlert = (err) => {\n  if (err) {\n    console.log(\"Error:\", err);\n    window.alert(err.toString());\n  }\n};\n","import React from \"react\";\nimport Day from \"../Day/Day\";\nimport { createUpdateEvent } from \"../../firebase\";\nimport { getEventsInDay, getWeekdays } from \"../../helpers\";\nimport PropTypes from \"prop-types\";\n\nexport default function Week(props) {\n  const { selectedWeek, addOrEditEvent, allEvents, checkForExistingMeetings } =\n    props;\n\n  return (\n    <div className=\"row col-md-10 g-0\">\n      {getWeekdays(selectedWeek).map((it, idx) => {\n        return (\n          <Day\n            key={it.$d.getTime()}\n            addOrEditEvent={addOrEditEvent}\n            date={it}\n            isFirstDay={!idx}\n            eventsInDay={getEventsInDay(it, allEvents) || []}\n            handleDrop={updateEventAsPerDrop(\n              allEvents,\n              checkForExistingMeetings\n            )}\n            checkForExistingMeetings={checkForExistingMeetings}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nWeek.propTypes = {\n  selectedWeek: PropTypes.number.isRequired,\n  addOrEditEvent: PropTypes.func.isRequired,\n  checkForExistingMeetings: PropTypes.func.isRequired,\n  allEvents: PropTypes.object.isRequired,\n};\n\nexport const updateEventAsPerDrop = (allEvents, checkForExistingMeetings) => {\n  return function (slot, eventId) {\n    //Dropped event\n    const event = allEvents[eventId];\n    const { startDate, endDate } = event;\n\n    //Updated start time where event was dropped\n    event.startDate = slot.$d.getTime();\n\n    //End time calculated by the duration of dropped event\n    event.endDate = event.startDate + (endDate - startDate);\n\n    //Alert for conflicts\n    checkForExistingMeetings(event, eventId);\n\n    //handle DB update\n    createUpdateEvent(event, eventId);\n  };\n};\n","import React from \"react\";\nimport Navigation from \"./Navigation\";\nimport Week from \"./Week\";\nimport PropTypes from \"prop-types\";\n\nexport default function WeeksAndNav({\n  changeWeek,\n  selectedWeek,\n  addOrEditEvent,\n  checkForExistingMeetings,\n  allEvents,\n}) {\n  return (\n    <>\n      <Navigation onClick={(e) => changeWeek(selectedWeek - 1)} icon=\"left\" />\n      <Week\n        selectedWeek={selectedWeek}\n        addOrEditEvent={addOrEditEvent}\n        allEvents={allEvents}\n        checkForExistingMeetings={checkForExistingMeetings}\n      />\n      <Navigation onClick={(e) => changeWeek(selectedWeek + 1)} icon=\"right\" />\n    </>\n  );\n}\n\nWeeksAndNav.propTypes = {\n  changeWeek: PropTypes.func.isRequired,\n  selectedWeek: PropTypes.number.isRequired,\n  addOrEditEvent: PropTypes.func.isRequired,\n  checkForExistingMeetings: PropTypes.func.isRequired,\n  allEvents: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport dayjs from \"dayjs\";\nimport PropTypes from \"prop-types\";\n\nexport default function CreateEvent({ addOrEditEvent }) {\n  const now = dayjs();\n\n  return (\n    <div className=\"create-event\">\n      <button\n        type=\"button\"\n        className=\"btn btn-success\"\n        onClick={(e) =>\n          addOrEditEvent({\n            slot:\n              now.get(\"minutes\") > 30\n                ? now.add(1, \"hour\").startOf(\"hour\")\n                : now.set(\"minute\", 30),\n          })\n        }\n      >\n        + Create Event\n      </button>\n    </div>\n  );\n}\n\nCreateEvent.propTypes = {\n  addOrEditEvent: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport CreateEvent from \"./CreateEvent\";\nimport PropTypes from \"prop-types\";\n\nexport default function AppHead({ addOrEditEvent }) {\n  return (\n    <div className=\"app-head\">\n      <h1>\n        <i className=\"fas fa-calendar-alt\"></i> Weekly Calendar\n      </h1>\n      <CreateEvent addOrEditEvent={addOrEditEvent} />\n    </div>\n  );\n}\n\nAppHead.propTypes = {\n  addOrEditEvent: PropTypes.func.isRequired,\n};\n","import React from \"react\";\n\nexport default function Label({ label, labelFor }) {\n  return (\n    <label labelfor={labelFor} className=\"form-label\">\n      {label}\n    </label>\n  );\n}\n","import React from \"react\";\nimport DatetimeRangePicker from \"react-datetime-range-picker\";\nimport Label from \"./Label\";\nimport PropTypes from \"prop-types\";\n\nexport default function EventDate(props) {\n  const { startDate, endDate, onChange } = props;\n\n  return (\n    <div className=\"field mb-3\">\n      <Label label=\"Select date and time\" />\n      <DatetimeRangePicker\n        onChange={onChange}\n        pickerClassName=\"pickers\"\n        className=\"date-time-input\"\n        startDate={startDate}\n        endDate={endDate}\n      />\n    </div>\n  );\n}\n\nEventDate.propTypes = {\n  startDate: PropTypes.object.isRequired,\n  endDate: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport Label from \"./Label\";\nimport PropTypes from \"prop-types\";\n\nexport default function InputText({\n  placeholder,\n  value,\n  onChange,\n  name,\n  label,\n  required,\n}) {\n  return (\n    <div className=\"mb-3\">\n      <Label label={label} labelFor={name} />\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        required={required}\n        {...{\n          placeholder,\n          value,\n          onChange: (e) => onChange(e.currentTarget.value),\n          id: name,\n        }}\n      />\n    </div>\n  );\n}\n\nInputText.propTypes = {\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  required: PropTypes.bool,\n};\n","import React, { useState } from \"react\";\nimport EventDateTime from \"./EventDateTime\";\nimport InputText from \"./InputText\";\nimport { createUpdateEvent, removeEvent } from \"../../firebase\";\nimport PropTypes from \"prop-types\";\n\nexport default function Form({\n  slot,\n  closeModal,\n  startDate,\n  endDate,\n  title,\n  owner,\n  theme,\n  eventId,\n  checkForExistingMeetings,\n}) {\n  const [formValues, setFormValues] = useState({\n    startDate: new Date(startDate || slot.$d),\n    endDate: new Date(endDate || slot.add(1, \"hour\").$d),\n    title,\n    theme,\n    owner,\n  });\n\n  const updateFormValues = (payload) =>\n    setFormValues({ ...formValues, ...payload });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const start = formValues.startDate;\n    const end = formValues.endDate;\n    const updatedEvent = {\n      ...formValues,\n      theme: formValues.theme || null,\n      startDate: start.getTime(),\n      endDate: end.getTime(),\n    };\n    checkForExistingMeetings(updatedEvent, eventId);\n    createUpdateEvent(updatedEvent, eventId);\n    closeModal();\n  };\n\n  const handleDelete = () => removeEvent(eventId, closeModal);\n\n  return (\n    <div className=\"form-fields\">\n      <h3 className=\"event-form-heading\">Event</h3>\n      {eventId ? (\n        <div className=\"event-actions\">\n          <i onClick={handleDelete} className={`fas fa-trash delete-event`} />\n        </div>\n      ) : null}\n\n      <form onSubmit={handleSubmit}>\n        <EventDateTime\n          startDate={formValues.startDate}\n          endDate={formValues.endDate}\n          onChange={(e) =>\n            updateFormValues({ endDate: e.end, startDate: e.start })\n          }\n        />\n        <InputText\n          placeholder={\"Enter event title\"}\n          value={formValues.title}\n          onChange={(title) => updateFormValues({ title })}\n          label=\"Title\"\n          name=\"title\"\n          required\n        />\n        <InputText\n          placeholder={\"Enter owner name\"}\n          value={formValues.owner}\n          onChange={(owner) => updateFormValues({ owner })}\n          label=\"Owner\"\n          name=\"owner\"\n          required\n        />\n        <InputText\n          placeholder={\"Enter theme\"}\n          value={formValues.theme}\n          onChange={(theme) => updateFormValues({ theme })}\n          label=\"Theme\"\n          name=\"theme\"\n        />\n        <button type=\"submit\" className=\"btn btn-info\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  slot: PropTypes.object,\n  closeModal: PropTypes.func.isRequired,\n  startDate: PropTypes.object,\n  endDate: PropTypes.object,\n  title: PropTypes.string,\n  owner: PropTypes.string,\n  theme: PropTypes.string,\n  eventId: PropTypes.string,\n  checkForExistingMeetings: PropTypes.func.isRequired,\n};\n","import Modal from \"react-modal\";\nimport PropTypes from \"prop-types\";\n\nexport default function EventModal(props) {\n  const { children, modalIsOpen, closeModal, title } = props;\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      contentLabel={title}\n      style={{\n        content: modalStyles,\n      }}\n    >\n      {children}\n    </Modal>\n  );\n}\n\nconst modalStyles = {\n  width: \"50%\",\n  height: \"70vh\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n};\n\nEventModal.propTypes = {\n  children: PropTypes.object,\n  modalIsOpen: PropTypes.bool,\n  closeModal: PropTypes.func.isRequired,\n  title: PropTypes.string,\n};\n","import React from \"react\";\nimport Form from \"./Form\";\nimport Modal from \"./Modal\";\nimport PropTypes from \"prop-types\";\n\nexport default function ModalWithForm({\n  closeModal,\n  checkForExistingMeetings,\n  modalPayload,\n}) {\n  const { isOpen, slot, ...modalFormProps } = modalPayload;\n  return (\n    <Modal\n      modalIsOpen={isOpen}\n      closeModal={closeModal}\n      title=\"Enter event details\"\n    >\n      <Form\n        checkForExistingMeetings={checkForExistingMeetings}\n        slot={slot}\n        {...modalFormProps}\n        closeModal={closeModal}\n      />\n    </Modal>\n  );\n}\n\nModalWithForm.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  checkForExistingMeetings: PropTypes.func.isRequired,\n  modalPayload: PropTypes.object.isRequired,\n};\n","import React, { useEffect, useState } from \"react\";\nimport WeeksAndNav from \"./Sections/WeeksAndNav\";\nimport AppHead from \"./Sections/AppHead\";\nimport ModalWithForm from \"./EventForm/ModalWithForm\";\nimport { subscribeToEvents } from \"../firebase\";\nimport { checkConflicts } from \"../helpers\";\n\nexport default function Calendar() {\n  const [selectedWeek, changeWeek] = useState(0);\n  const [modalPayload, setModalState] = useState({});\n  const [allEvents, setEvents] = useState({});\n\n  //Open modal with initial values\n  const addOrEditEvent = (payload) => {\n    setModalState({\n      isOpen: true,\n      ...payload,\n    });\n  };\n\n  //subscribe to events firebase data\n  useEffect(() => subscribeToEvents(setEvents), []);\n\n  const checkForExistingMeetings = (event, eventId, hideAlert) =>\n    checkConflicts(event, allEvents, eventId, hideAlert);\n\n  const closeModal = (e) =>\n    setModalState({ ...modalPayload, isOpen: !modalPayload.isOpen });\n\n  return (\n    <>\n      <AppHead addOrEditEvent={addOrEditEvent} />\n\n      <div className=\"calendar-container row\">\n        <WeeksAndNav\n          changeWeek={changeWeek}\n          addOrEditEvent={addOrEditEvent}\n          allEvents={allEvents}\n          checkForExistingMeetings={checkForExistingMeetings}\n          selectedWeek={selectedWeek}\n        />\n        <ModalWithForm\n          closeModal={closeModal}\n          checkForExistingMeetings={checkForExistingMeetings}\n          modalPayload={modalPayload}\n        />\n      </div>\n    </>\n  );\n}\n","import \"./App.css\";\nimport Calendar from \"./Components/Calendar\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calendar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}